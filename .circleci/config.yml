version: 2.1

orbs:
  vault: contentful/vault@1

executors:
  linux-node:
    resource_class: xlarge
    docker:
      - image: cimg/node:14.17
    environment:
      CYPRESS_INSTALL_BINARY: 0
  linux-cypress:
    resource_class: xlarge
    docker:
      - image: cypress/browsers:node14.19.0-chrome100-ff99-edge
    environment:
      TZ: UTC
      CYPRESS_CACHE_FOLDER: ~/.cache/Cypress

#  macos:
#    macos:
#      xcode: 11.4

cache-key: &cache-key
  key: dependency-cache-primary-{{ arch }}-yarn-packages-{{ checksum ".nvmrc" }}-{{ checksum "yarn.lock" }}

commands:
  yarn_install:
    steps:
      - restore_cache: *cache-key
      - vault/get-secrets:
          template-preset: semantic-release-ecosystem
      - run: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc'
      - run: yarn install --prefer-offline --pure-lockfile
      - save_cache:
          <<: *cache-key
          paths:
            - ~/.cache/yarn
  yarn_serve:
    steps:
      - run:
          command: yarn serve .docz/dist -n -s -p 9000
          background: true
      - run: yarn wait-on -t 60000 http://localhost:9000

jobs:
  lint:
    executor: linux-node
    steps:
      - checkout
      - yarn_install
      - run: yarn lint
      - run: yarn build
      - run: yarn tsc
  unit-tests:
    executor: linux-node
    steps:
      - checkout
      - yarn_install
      - run: yarn build
      - run: yarn test:ci

  integration-tests:
    parameters:
      executor:
        type: executor
      browser:
        type: enum
        enum: [chrome, firefox, edge]

    parallelism: 3
    executor: << parameters.executor >>
    steps:
      - checkout
      - yarn_install
      - run: yarn build
      - run: yarn docz:build
      - yarn_serve
      - run:
          command: |
            TESTFILES=$(circleci tests glob "cypress/integration/**/*.ts" | circleci tests split --split-by=timings --timings-type=filename | tr '\n' ',')
            npx cypress run --spec "${TESTFILES}" --browser << parameters.browser >>
      - store_test_results:
          path: cypress/results
      - store_artifacts:
          path: cypress/screenshots
      - store_artifacts:
          path: cypress/videos

  component-tests:
    executor: linux-cypress
    steps:
      - checkout
      - yarn_install
      - run: yarn build
      - run:
          name: Run cypress component tests
          command: |
            yarn cy:run:ct
      - store_artifacts:
          path: cypress/videos

  release:
    executor: linux-node
    steps:
      - checkout
      - yarn_install
      # Lerna only looks for the name GH_TOKEN
      - run: export GH_TOKEN=${GITHUB_TOKEN}
      - run: git config --global user.email "${GIT_AUTHOR_EMAIL}"
      - run: git config --global user.name "${GIT_AUTHOR_NAME}"
      - run: yarn build
      - run: yarn lerna version --no-private --conventional-commits --create-release github --yes
      # If you planning to upgrade lerna, `no-verify-access` is not needed anymore post version 5.2.0
      # See: https://github.com/lerna/lerna/issues/2788#issuecomment-1192788964
      - run: yarn lerna publish from-git --yes --no-verify-access

workflows:
  version: 2
  # run on every commit
  commit:
    jobs:
      - lint:
          context: vault
      - unit-tests:
          context: vault
      - component-tests:
          context: vault
      - integration-tests:
          name: integration-<< matrix.executor >>-<< matrix.browser >>
          context: vault
          matrix:
            alias: integration-tests-linux
            parameters:
              executor: [linux-cypress]
              browser: [chrome, firefox, edge]
      - release:
          context: vault
          filters:
            branches:
              only: master
          requires:
            - lint
            - unit-tests
            - integration-tests-linux
